============================================================================

The analyzer takes six command line arguments. The first two are
respectively the x and y coordinates of the first vertex of the
triangle, the second two are respectively the x and y coordinates of
the second vertex, etc. Each coordinate is a decimal integer in the
range 0...2^31-1.

The behavior of the triangle analyzer is undefined if the input format
does not match the one specified above.

The output of the triangle analyzer is a single line of text that is
terminated by a newline. This line is the result of the analysis of
the triangle. It should match this Perl regex:

^(((scalene|isosceles|equilateral) (acute|obtuse|right))|not a triangle)\n$

Three vertices are not a triangle if they are colinear.

A triangle is equilateral if three sides have the same length,
isosceles if two sides have the same length, and scalene otherwise.

A triangle is right if one of its angles is 90 degrees, it is obtuse
if one of its angles exceeds 90 degrees, otherwise it is acute.

Non-functional requirements:

- The analyzer must be written in C that can be compiled by GCC and
  Clang on a CADE Lab Linux machine. These machines are x86-64, but
  your code should also work when compiled to a 32-bit target.

- It is fine to use external libraries but please avoid exotic ones.

Submission:

- Push your analyzer to a directory in the class github repo called
  "triangle/username" where "username" is your github user name.

- Include a makefile so that when someone types "make" in your
  triangle directory, the result is an executable called "triangle".

- DO NOT add your executable to git.

- Try not to make your code or makefile CADE-specific; ideally it can be
  compiled on any Linux or Mac OS X machine.

============================================================================
